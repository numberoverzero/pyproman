#!/bin/bash

# Automatic mapping between the project folder and virtual env folder.
# Requires VENV and PROJ to be defined

function parse_first_arg() {
	local var
	for var in "$@"
	do
		if [[ ! "$var" =~ ^- ]]
		then
			nonflag_arg="$var"
			break
		fi
	done
}

function project_from_args() {
	# Find the script file we'll be executing
	# (it's the first arg that doesn't start with a dash)
	parse_first_arg "$@"
	local script=$nonflag_arg
	
	# If the script file doesn't start with a / then it's relative,
	# so we prepend $PWD to get abs path
	if [[ ! "$script" =~ ^/ ]]
	then
		local script=$PWD/$script
	fi

	# Only do stuff if the script path starts with project root
	if [[ "$script" == $PROJ* ]]
	then
		#Strip project root off
		local pr_len=${#PROJ}
		project=${script:pr_len+1}

		#Strip everything after project folder
		project=${project%%/*}
	fi
}

function project_from_pwd() {
	# Only do stuff if the pwd starts with project root
	if [[ "$PWD" == $PROJ* ]]
	then
		#Strip project root off
		local pr_len=${#PROJ}
		project=${PWD:pr_len+1}

		#Strip everything after project folder
		project=${project%%/*}
	fi
}

function init_project() {
	project_from_pwd
	if [ "$project" ]
	then
		virtualenv -p $1 --no-site-packages $VENV/$project
	else
		echo Could not determine what project to create virtualenv for.
	fi
}

function exec_project_bin() {

	local cmd="$1"
	local args="${@:2}"

	# Try to figure out what project we're in

	# Use $PWD first since some commands may not take args
	project_from_pwd
	if [ ! "$project" ]
	then
		project_from_args $args
		if [ ! "$project" ]
		then
			# Couldn't figure out project from $PWD or first arg
			echo Could not locate virtualenv interpreter for given project.
			echo Not running $cmd.
			exit
		fi
	fi

	# Found project somehow
	$VENV/$project/bin/$cmd $args
}

function exec_from_proj() {
	local cmd="$1"
	local args="${@:2}"
	project_from_pwd
	if [ "$project" ]
	then
		$VENV/$project/bin/$cmd $args
	else
		echo Could not locate virtualenv for given project.
		echo Not running $cmd.
	fi
}